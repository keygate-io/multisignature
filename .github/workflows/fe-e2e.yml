name: E2E frontend validation using Playwright 
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production
  push:
    branches: [ "main" ]
    paths:
      - 'src/dash/**'
      - 'e2e/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/dash/**'
      - 'e2e/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install DFX
      uses: dfinity/setup-dfx@main
      with:
        dfx-version: '0.24.0'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: |
        npm install
        npx playwright install --with-deps

    - name: Start DFX
      run: dfx start --background

    - name: Setup deployer identity
      run: |
        mkdir -p ~/.config/dfx/identity/default
        echo "${{ secrets.DFX_IDENTITY_DEPLOYER }}" > ~/.config/dfx/identity/default/identity.pem
        chmod 600 ~/.config/dfx/identity/default/identity.pem

    - name: Deploy local environment
      run: |
        chmod +x scripts/deployment.sh
        ./scripts/deployment.sh
        # Wait for deployment to complete and verify
        timeout=300
        interval=10
        elapsed=0
        until curl -s http://localhost:4943/api/v2/status > /dev/null; do
          if [ $elapsed -ge $timeout ]; then
            echo "Timeout waiting for deployment"
            exit 1
          fi
          sleep $interval
          elapsed=$((elapsed + interval))
          echo "Waiting for deployment... ($elapsed seconds)"
        done

    - name: Run Playwright tests
      run: npx playwright test

    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Stop DFX
      if: always()
      run: dfx stop
