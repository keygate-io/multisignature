name: Rust
on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/account/**'
      - 'src/central/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/account/**'
      - 'src/central/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install DFX
      uses: dfinity/setup-dfx@main

    - name: Start DFX
      run: dfx start --background

    # - name: Setup DFX identity
    #   run: |
    #     mkdir -p ~/.config/dfx/identity/default
    #     # Generate Ed25519 private key
    #     openssl genpkey -algorithm Ed25519 -out ~/.config/dfx/identity/default/identity.pem
    #     chmod 600 ~/.config/dfx/identity/default/identity.pem

    - name: Setup deployer identity and create canisters
      run: |
        mkdir -p ~/.config/dfx/identity/default
        echo "${{ secrets.DFX_IDENTITY_DEPLOYER }}" | base64 -d > ~/.config/dfx/identity/default/identity.pem
        chmod 600 ~/.config/dfx/identity/default/identity.pem
        dfx canister create --all -v

    - name: Generate wasm artifacts
      run: dfx build

    - name: Run tests
      run: cargo test --verbose

    - name: Stop DFX
      if: always()
      run: dfx stop
